{"version":3,"sources":["../../app-es6/models/ListaNegociacoes.js"],"names":["ListaNegociacoes","_negociacoes","negociacao","push","concat"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wCAAaA,gB;;AAET;AACA;AACA;;;;;;;;AAQA;AACA;;;;;;;AAOD,4CAAa;AAAA;;AACZ,yBAAKC,YAAL,GAAoB,EAApB;AACA;;;;6CAESC,U,EAAW;;AAEhB,6BAAKD,YAAL,CAAkBE,IAAlB,CAAuBD,UAAvB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACH;;;8CAEQ;;AAEL,6BAAKD,YAAL,GAAoB,EAApB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACH;;;wCAEgB;;AAEb;AACA;AACA,+BAAO,GAAGG,MAAH,CAAU,KAAKH,YAAf,CAAP;AACH","file":"ListaNegociacoes.js","sourcesContent":["export class ListaNegociacoes {\n\n    // \"Armadilha\" será a função para atualização da view\n    // Caso a função passada no parâmetro \"armadilha\" seja montado utilizando function necessito do contexto\n    /**\n    constructor(contexto, armadilha){\n        this._negociacoes = [];\n        this._armadilha = armadilha;\n        this._contexto = contexto;\n    }\n    */\n\n    // Caso \"armadilha\" seja montado por aerofunction não necessito do contexto\n    /** \n    constructor(armadilha){\n        this._negociacoes = [];\n        this._armadilha = armadilha;\n    }\n    */\n\n   constructor(){\n    this._negociacoes = [];\n   }\n\n    adiciona(negociacao){\n\n        this._negociacoes.push(negociacao);        \n\n        // Necessito utilizar apenas caso a função \"armadilha\" seja montado utilizando function\n        // Parâmetros: Método que quero chamar, contexto de execução, parâmetros passados para o método\n        // Contexto de execução será o \"NegociacaoController\"\n        // Reflect.apply(this._armadilha, this._contexto, [this]);\n\n        // Consigo acessar o this somente se o \"armadilha\" for montado utilizando aerofunction\n        // No aerofunction o contexto do this é léxico e não dinâmico\n        // this._armadilha(this); \n    }\n\n    esvazia(){\n\n        this._negociacoes = [];\n\n        // Necessito utilizar apenas caso a função \"armadilha\" seja montado utilizando function\n        // Parâmetros: Método que quero chamar, contexto de execução, parâmetros passados para o método\n        // Contexto de execução será o \"NegociacaoController\"\n        // Reflect.apply(this._armadilha, this._contexto, [this]);\n\n        // Consigo acessar o this somente se o \"armadilha\" for montado utilizando aerofunction\n        // No aerofunction o contexto do this é léxico e não dinâmico\n        // this._armadilha(this);\n    }\n\n    get negociacoes(){\n\n        // Retornando um novo array concatenado com o array de negociações atual\n        // Serve para evitar que o array seja modificado indevidamente\n        return [].concat(this._negociacoes);\n    }\n\n}"]}