{"version":3,"sources":["../../app-es6/models/Negociacao.js"],"names":["Negociacao","data","quantidade","valor","_data","Date","getTime","_quantidade","_valor","Object","freeze"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAAaA,U;;AAET;AACA,oCAAYC,IAAZ,EAAkBC,UAAlB,EAA8BC,KAA9B,EAAoC;AAAA;;AAEhC;AACA;;AAEA;AACA;AACA;AACA,yBAAKC,KAAL,GAAa,IAAIC,IAAJ,CAAUJ,KAAKK,OAAL,EAAV,CAAb;AACA,yBAAKC,WAAL,GAAmBL,UAAnB;AACA,yBAAKM,MAAL,GAAcL,KAAd;;AAEA;AACA;AACA;AACA;AACAM,2BAAOC,MAAP,CAAc,IAAd;AACH;;AAED;;;;;wCACY;AACR,+BAAO,KAAKH,WAAL,GAAmB,KAAKC,MAA/B;AACH;;;wCAES;AACN;AACA;;AAEA;AACA;AACA,+BAAO,IAAIH,IAAJ,CAAS,KAAKD,KAAL,CAAWE,OAAX,EAAT,CAAP;AACH;;;wCAEe;AACZ,+BAAO,KAAKC,WAAZ;AACH;;;wCAEU;AACP,+BAAO,KAAKC,MAAZ;AACH","file":"Negociacao.js","sourcesContent":["export class Negociacao{\n\n    // Toda classe que possui o método 'constructor()' só poder ser chamada com a utilização de 'new'\n    constructor(data, quantidade, valor){\n\n        // O 'new' fará com que os 'this' aponte para a instância da classe que está sendo executada no momento.\n        // O '_' na frente do atributo é uma convenção que indica que os atributos não poderão ser modificados fora da classe.\n\n        // Caso o objeto seja montando como abaixo, a data ainda é passível de alteração\n        // this._data = data (obs 01);\n        // Para evitar esse comportamento, deve-se retornar o data com \"new\"\n        this._data = new Date (data.getTime());\n        this._quantidade = quantidade;\n        this._valor = valor;\n\n        // Congela o objeto que acabou de ser construído\n        // Protege os atributos da classe de serem modificados posteriormente\n        // Congela somente as propriedades do objeto (Ex: as propriedades da data,\n        // montada a partir de um \"new Date()\" continuam podendo ser alteradas), caso a data não seja tratada no getData()\n        Object.freeze(this);\n    }\n\n    // Forma mais prática de construir métodos de acesso a atributos\n    get volume(){\n        return this._quantidade * this._valor;\n    }\n\n    get data(){\n        // Caso a data seja retornada desta forma, ela continuará passível de alteração, mesmo que o objeto esteja congelada (obs 02)\n        //return this._data;\n\n        // Retornando a data com \"new\" para evitar que os atributos de Date sejam alterados pois o freeze congela apenas os atributos do próprio objeto\n        // Obs: Freeze é \"raso\", não atua em subníveis de objetos do objeto\n        return new Date(this._data.getTime());\n    }\n\n    get quantidade(){\n        return this._quantidade;\n    }\n\n    get valor(){\n        return this._valor;\n    }\n\n    // Forma \"padrão\" para construir métodos de acesso a atributos\n\n    /** \n    getVolume(){\n        return this._quantidade * this._valor;\n    }\n\n    getData(){\n        return this._data;\n    }\n\n    getQuantidade(){\n        return this._quantidade;\n    }\n\n    getValor(){\n        return this._valor;\n    }\n    */\n\n}"]}